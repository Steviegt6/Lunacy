@@ -1,3 +1,5 @@
+const lunacy = require("./lunacy.js")
+
 /*! For license information please see renderer.js.LICENSE.txt */
 module.exports = (function (oe) {
   var se = {};
@@ -11882,7 +11884,7 @@
               ke.createElement("img", {
                 draggable: !1,
                 src: this.props.images.logo,
-                alt: "logo",
+                alt: "logo"
               }),
               this.props.images.logoOverlay &&
                 ke.createElement("img", {
@@ -11890,7 +11892,7 @@
                   draggable: !1,
                   src: this.props.images.logoOverlay,
                 }),
-              ke.createElement("h2", null, "Lunar Client")
+              ke.createElement("h2", null, "Lunacy")
             ),
             ke.createElement(
               "div",
@@ -12329,6 +12331,8 @@
         }
       };
     async function downloadTextures(oe, se, _e, ke) {
+      if (!lunacy.areTexturesEnabled())
+        return;
       ct.a.info("[TEXTURES] Starting textures check"),
         await Fe.promises.mkdir(ot, { recursive: !0 }),
         await Fe.promises.mkdir(it, { recursive: !0 });
@@ -12360,6 +12364,8 @@
         ct.a.info("[TEXTURES] Done textures check");
     }
     async function downloadMissingFiles(oe, se, _e) {
+      if (!lunacy.areTexturesEnabled())
+        return;
       const ke = [];
       for (const _e of oe.split("\n")) {
         const [oe, Te] = _e.split(" "),
@@ -12369,6 +12375,8 @@
       await bulkDownloadFiles("textures", 20, ke, _e);
     }
     async function deleteUnreferencedFiles(oe) {
+      if (!lunacy.areTexturesEnabled())
+        return;
       var se, _e;
       const ke = new Set();
       for (const se of oe.split("\n")) {
@@ -12504,7 +12512,7 @@
                 ),
                 Te.error(
                   "Memory-related launch fail",
-                  "Your client failed to allocate enough memory to start. Consider reducing Allocated Memory in the Settings tab, or closing other applications on your computer."
+                  "Your client failed to allocate enough memory to start. Consider reducing Allocated Memory in the Launcher Settings tab, or closing other applications on your computer."
                 ))
               : ke
               ? (ct.a.info(
@@ -12586,8 +12594,6 @@
           "{}",
           "--gameDir",
           nt,
-          "--texturesDir",
-          it,
           "--launcherVersion",
           Xe,
           "--hwid",
@@ -12597,6 +12603,10 @@
           "--height",
           tt.toString(),
         ];
+      if (lunacy.areTexturesEnabled()) {
+        at.push("--texturesDir");
+        at.push(it);
+      }
       null != oe && (at.push("--server"), at.push(oe.ip));
       const st = { programArgs: at, allocatedMemoryMb: ot };
       switch (se) {
@@ -12742,7 +12752,7 @@
             ke.createElement(
               "div",
               { className: "row" },
-              this.props.blogPosts.map((oe) =>
+              lunacy.getNewBlogPosts([...this.props.blogPosts]).map((oe) =>
                 ke.createElement(BlogPostTile_BlogPostTile, {
                   key: oe.title,
                   blogPost: oe,
@@ -14168,13 +14178,18 @@
           { className: "col-12 card" },
           ke.createElement(
             "h1",
-            { className: "mb-3" },
+            { className: "mb-3quart" },
             ke.createElement("i", {
               className: "fas fa-external-link-alt mr-1",
             }),
             "QUICK LINKS"
           ),
           ke.createElement(
+            "p",
+            { className: "mb-3quart" },
+            "These will open windows in your browser."
+          ),
+          ke.createElement(
             "div",
             { id: "quick-links" },
             ke.createElement(QuickLink_QuickLink, {
@@ -14259,7 +14274,20 @@
                         ke.createElement(LogsFolderCard_LogsFolderCard, null)
                       )
                     ),
+                    ke.createElement(
+                      "div",
+                      { className: "row my-3" },
+                      ke.createElement(
+                        "div",
+                        { className: "col-twothirds" },
-                    ke.createElement(QuickLinksCard_QuickLinksCard, null)
+                        ke.createElement(QuickLinksCard_QuickLinksCard, null)
+                      ),
+                      ke.createElement(
+                        "div",
+                        { className: "col-4" },
+                        ke.createElement(lunacy.createVersionCard(ke), null)
+                      )
+                    )
                   )
                 )
               )
@@ -14316,7 +14344,7 @@
           })()
             .then((oe) => {
               this.setState({ metadata: oe }),
-                oe.theme &&
+       !oe.theme &&
                   ["halloween"].includes(oe.theme) &&
                   (document.documentElement.classList.remove("theme-default"),
                   document.documentElement.classList.add("theme-" + oe.theme));
@@ -14474,6 +14502,13 @@
               },
             },
             {
+              name: "Lunacy",
+              onClick: () => {
+                this.setState({activeTab: "LunacySettings" }),
+                  Ye.pageview("/lunacysettings").send();
+              },
+            },
+            {
               name: "About",
               onClick: () => {
                 this.setState({ activeTab: "About" }),
@@ -14506,6 +14541,9 @@
             break;
           case "Settings":
             _e = ke.createElement(SettingsPage_SettingsPage, null);
+            break;
+          case "LunacySettings":
+            _e = ke.createElement(lunacy.getSettingsPage(ke, AfterLaunchActionSetting_AfterLaunchActionSetting, AllocatedMemorySetting_AllocatedMemorySetting, LaunchDirectorySetting_LaunchDirectorySetting, ResolutionSetting_ResolutionSetting, ExperimentalUpdatesSetting_ExperimentalUpdatesSetting), null);
             break;
           case "About":
             _e = ke.createElement(AboutPage_AboutPage, null);
